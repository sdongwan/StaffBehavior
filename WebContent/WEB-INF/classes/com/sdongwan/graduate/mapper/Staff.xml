<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sdongwan.graduate.model.Staff">

	<resultMap id="BaseResultMap" type="com.sdongwan.graduate.model.Staff"
		autoMapping="true">
		<association property="company" javaType="com.sdongwan.graduate.model.Company">
			<result property="companyName" column="company_name"/>
		</association>
		
		<association property="depart" javaType="com.sdongwan.graduate.model.Depart">
			<result property="departName" column="depart_name"/>
		</association>
		
		<association property="job" javaType="com.sdongwan.graduate.model.Job">
			<result property="jobName" column="job_name"/>
		</association>
	</resultMap>
	
	<select id="getAll" resultMap="BaseResultMap">
		SELECT
			st.company_id,
			st.job_id,
			st.work_year,
			st.enter_time,
			st.staff_name,
			st.password,
			st.account,
			st.gender,
			st.salary,
			st.education,
			st.graduate_school,
			st.married,
			st.birthday,
			st.remark,
			st.create_time,
			st.update_time,
			st.hometown,
			st.depart_id,
			t_company.company_name,
			t_depart.depart_name,
			t_job.job_name
			FROM
			t_staff AS st
			LEFT JOIN t_company ON st.company_id= t_company.company_id 
			LEFT JOIN t_depart on st.depart_id = t_depart.depart_id
			LEFT JOIN t_job on st.job_id = t_job.job_id
	</select>
	
	<select id="getCount" resultType="int">
		select count(*) from t_staff 
	</select>
	
	<select id="getMaxStaffId" resultType="int">
		select max(staff_id) from t_staff	
	</select>
	
	<select id="getListByPage" parameterType="hashmap" resultMap="BaseResultMap">
		select * from t_staff limit #{begin,jdbcType=INTEGER},#{end,jdbcType=INTEGER}
	</select>
	
	<select id="getStaffByJobId" parameterType="int" resultMap="BaseResultMap">
		select staff_name,staff_id from t_staff where job_id = #{jobId,jdbcType=INTEGER} 
	</select>
	
	<insert id="add" parameterType="com.sdongwan.graduate.model.Staff">
		insert into t_staff 
			(
				depart_id,
				company_id,
				staff_name,
				job_id,
				work_year,
				enter_time,
				password,
				account,
				gender,
				salary,
				education,
				graduate_school,
				married,
				birthday,
				hometown,
				remark,
				create_time
			) 
			values 
			(
				#{departId,jdbcType=INTEGER},
				#{companyId,jdbcType=INTEGER},
				#{staffName,jdbcType=VARCHAR},
				#{jobId,jdbcType=INTEGER},
				#{workYear,jdbcType=INTEGER},
				#{enterTime,jdbcType=VARCHAR},
				#{password,jdbcType=VARCHAR},
				#{account,jdbcType=VARCHAR},
				#{gender,jdbcType=VARCHAR},
				#{salary,jdbcType=VARCHAR},
				#{education,jdbcType=VARCHAR},
				#{graduateSchool,jdbcType=VARCHAR},
				#{married,jdbcType=VARCHAR},
				#{birthday,jdbcType=VARCHAR},
				#{hometown,jdbcType=VARCHAR},
				#{remark,jdbcType=VARCHAR},
				date_format(now(),'%Y-%m-%d')
			)
	</insert>
	
	<update id="updById" parameterType="com.sdongwan.graduate.model.Staff">
		update t_staff	set
			staff_name = #{staffName,jdbcType=VARCHAR},
			gender = #{gender,jdbcType=INTEGER},
			married = #{married,jdbcType=INTEGER},
			birthday = #{birthday,jdbcType=VARCHAR},
			hometown = #{hometown,jdbcType=VARCHAR},
			education = #{education,jdbcType=VARCHAR},
			graduate_school = #{graduateSchool,jdbcType=VARCHAR},
			remark = #{remark,jdbcType=VARCHAR},
			account = #{account,jdbcType=VARCHAR},
			salary = #{salary,jdbcType=VARCHAR},
			update_time = date_format(now(),'%Y-%m-d')
		where staff_id = #{staffId,jdbcType=INTEGER}
	</update>
	
	<select id="findById" parameterType="int" resultMap="BaseResultMap">
		select * from t_staff
			where staff_id = #{postId,jdbcType=INTEGER}
	</select>

	<select id = "findByAccount" parameterType="String" resultMap="BaseResultMap" >
		select * from t_staff
			where account = #{account,jdbcType=VARCHAR}
	</select>
	
	<delete id="delById" parameterType="int">
		delete from t_staff where staff_id = #{staffId,jdbcType=INTEGER}
	</delete>
	
</mapper>